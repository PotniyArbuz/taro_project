// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
function smoothScrollTo(target, duration = 1000) {
    const start = window.scrollY;
    let targetPosition;

    if (target instanceof HTMLElement) {
        targetPosition = target.getBoundingClientRect().top + start - 50;
    } else {
        targetPosition = document.documentElement.scrollHeight - window.innerHeight;
    }

    const distance = targetPosition - start;
    let startTime = null;

    function animation(currentTime) {
        if (startTime === null) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const progress = Math.min(timeElapsed / duration, 1);
        const ease = easeInOutQuad(progress);

        window.scrollTo(0, start + distance * ease);

        if (timeElapsed < duration) {
            requestAnimationFrame(animation);
        }
    }

    function easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    }

    requestAnimationFrame(animation);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
async function fetchRemainingRequests(userId) {
    try {
        const response = await fetch('https://ai-girls.ru/remaining-requests', {
            method: 'GET',
            headers: {
                'X-Telegram-User-Id': userId
            }
        });

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const data = await response.json();
        const remaining = data.remaining;
        document.getElementById("remaining-requests").innerText = `(–æ—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤: ${remaining})`;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤:', error);
        document.getElementById("remaining-requests").innerText = ``;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ YandexGPT (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async function getYandexGPTResponse(question, selectedCards, userId) {
    try {
        const response = await fetch('https://ai-girls.ru/yandex-gpt', {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': userId
            },
            body: JSON.stringify({ question, cards: selectedCards, user_id: userId, chat_id: chatId, source: "sovmestimost" })
        });

        if (!response.ok) {
            const data = await response.json();
            throw new Error(data.error || `–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const data = await response.json();
        return data.response || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏:', error);
        return error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.';
    }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–¥–ø–∏—Å–∏ "–°–ø–∞—Å–∏–±–æ üòä"
function showThanksMessage() {
    const thanksMessage = document.getElementById("thanks-message");
    thanksMessage.style.display = "block";
    thanksMessage.style.opacity = "1";

    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        thanksMessage.style.opacity = "0";
        setTimeout(() => {
            thanksMessage.style.display = "none";
        }, 500); // –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—Ç—É—Ö–∞–Ω–∏—è
    }, 2000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
function updateButtonState() {
    const name1 = document.getElementById("name1").value.trim();
    const name2 = document.getElementById("name2").value.trim();
    const startBtn = document.getElementById("start-btn");
    startBtn.disabled = !(name1 && name2);
}

document.getElementById("name1").addEventListener("input", updateButtonState);
document.getElementById("name2").addEventListener("input", updateButtonState);
document.getElementById("thank-btn").addEventListener("click", showThanksMessage);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    const user = window.Telegram.WebApp.initDataUnsafe.user || {};
    const userId = user.id || "unknown";
    fetchRemainingRequests(userId); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
});


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å–∫–ª–∞–¥–∞ (—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –¥–ª—è 8 –∫–∞—Ä—Ç)
async function startReading() {
    const name1 = document.getElementById("name1").value.trim();
    const birthdate1 = document.getElementById("birthdate1").value;
    const name2 = document.getElementById("name2").value.trim();
    const birthdate2 = document.getElementById("birthdate2").value;

    // –ü—Ä–∏–º–µ—Ä —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–ª—è —Ä–∞—Å–∫–ª–∞–¥–∞ (–∞–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ –ø–æ–¥ –≤–∞—à—É –ª–æ–≥–∏–∫—É)
    const question = `–†–∞—Å–∫–ª–∞–¥ –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–≤—É—Ö –ª—é–¥–µ–π (8 –∫–∞—Ä—Ç).\n\n` +
                    `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–µ—Ä–≤–æ–º —á–µ–ª–æ–≤–µ–∫–µ:\n–ò–º—è: ${name1}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthdate1}\n\n` +
                    `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ç–æ—Ä–æ–º —á–µ–ª–æ–≤–µ–∫–µ:\n–ò–º—è: ${name2}\n–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${birthdate2}\n\n` +
                    `–ü–æ–∑–∏—Ü–∏–∏ –∫–∞—Ä—Ç:\n` +
                    `1. –°—É—â–Ω–æ—Å—Ç—å –ü–µ—Ä–≤–æ–≥–æ –ß–µ–ª–æ–≤–µ–∫–∞ - –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.\n` +
                    `2. –°—É—â–Ω–æ—Å—Ç—å –í—Ç–æ—Ä–æ–≥–æ –ß–µ–ª–æ–≤–µ–∫–∞ - –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚Äî –µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏.\n` +
                    `3. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å—Ö–æ–¥—è—Ç—Å—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –æ–±–æ–∏—Ö –ª—é–¥–µ–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∏—Ö –ø–æ—Ç–æ–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.\n` +
                    `4. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –í–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ - –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∑–∫–æ –æ–Ω–∏ –æ—â—É—â–∞—é—Ç –∏ –ø–æ–Ω–∏–º–∞—é—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –∫–∞–∫ –≤—ã—Ä–∞–∂–∞—é—Ç—Å—è —á—É–≤—Å—Ç–≤–∞.\n` +
                    `5. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –∏ –ö–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–∞—è –°–≤—è–∑—å - –†–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏, —Å—Ö–æ–¥—Å—Ç–≤–æ –≤–∑–≥–ª—è–¥–æ–≤ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏.\n` +
                    `6. –§–∏–∑–∏—á–µ—Å–∫–∞—è –∏ –°–µ–∫—Å—É–∞–ª—å–Ω–∞—è –•–∏–º–∏—è - –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ç–µ–ø–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è –∏ —Å–µ–∫—Å—É–∞–ª—å–Ω—É—é –≥–∞—Ä–º–æ–Ω–∏—é –º–µ–∂–¥—É –ø–∞—Ä—Ç–Ω—ë—Ä–∞–º–∏.\n` +
                    `7. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –í—ã–∑–æ–≤—ã - –û–±–æ–∑–Ω–∞—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π.\n` +
                    `8. –û–±—â–µ–µ –ë—É–¥—É—â–µ–µ –∏ –°–æ–≤–º–µ—Å—Ç–Ω–æ–µ –†–∞–∑–≤–∏—Ç–∏–µ - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –ø—É—Ç–∏ –∏ –¥–∞—ë—Ç —Å–æ–≤–µ—Ç –ø–æ –¥–∞–ª—å–Ω–µ–π—à–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º.\n` +
                    `–û—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–º. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1200.`;

    const user = window.Telegram.WebApp.initDataUnsafe.user || {};
    const userId = user.id || "unknown";

    // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –æ—Ç–≤–µ—Ç –∏ –∫–Ω–æ–ø–∫—É "–°–ø–∞—Å–∏–±–æ"
    const answerDiv = document.getElementById("answer");
    answerDiv.style.display = "none";
    document.getElementById("answer-text").innerText = "";
    const thankBtn = document.getElementById("thank-btn");
    thankBtn.style.display = "none";

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    const animationDiv = document.getElementById("animation");
    animationDiv.style.display = "block";
    animationDiv.innerHTML = '<div id="deck" class="deck"><img src="images/deck1.jpg" alt="–ö–æ–ª–æ–¥–∞ –∫–∞—Ä—Ç" style="width: 100%; height: 100%;"></div>';

    // –í—ã–±–∏—Ä–∞–µ–º 8 —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–∞—Ä—Ç
    const selectedCards = [];
    while (selectedCards.length < 8) {
        const randomIndex = Math.floor(Math.random() * cards.length);
        const card = cards[randomIndex];
        if (!selectedCards.includes(card)) {
            selectedCards.push(card);
        }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ YandexGPT –∑–∞—Ä–∞–Ω–µ–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–∏—Å
    const gptPromise = getYandexGPTResponse(question, selectedCards, userId);

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏ –ø–æ–∑–∏—Ü–∏–π –∫–∞—Ä—Ç –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const screenWidth = window.innerWidth;
    const baseCardWidth = screenWidth < 600 ? screenWidth / 3 - 20 : 120;
    const gap = 10;
    const cardWidth = baseCardWidth + gap;

    // –ü–µ—Ä–≤—ã–π —Ä—è–¥: 3 –∫–∞—Ä—Ç—ã
    const totalWidthFirstRow = baseCardWidth * 3 + gap * 2;
    let startLeftFirstRow = (screenWidth - totalWidthFirstRow) / 2;
    if (startLeftFirstRow < 10) startLeftFirstRow = 10;
    // –í—Ç–æ—Ä–æ–π —Ä—è–¥: 3 –∫–∞—Ä—Ç—ã
    const totalWidthSecondRow = baseCardWidth * 3 + gap * 2;
    let startLeftSecondRow = (screenWidth - totalWidthSecondRow) / 2;
    if (startLeftSecondRow < 10) startLeftSecondRow = 10;
    // –¢—Ä–µ—Ç–∏–π —Ä—è–¥: 2 –∫–∞—Ä—Ç—ã
    const totalWidthThirdRow = baseCardWidth * 2 + gap;
    let startLeftThirdRow = (screenWidth - totalWidthThirdRow) / 2;
    if (startLeftThirdRow < 10) startLeftThirdRow = 10;

    const deck = document.getElementById("deck");
    deck.style.width = `${baseCardWidth}px`;
    const deckHeight = baseCardWidth * 1.5;

    const deckTop = 50;
    const firstRowTop = deckTop + deckHeight + deckHeight / 2;
    const secondRowTop = firstRowTop + deckHeight + gap;
    const thirdRowTop = secondRowTop + deckHeight + gap;

    const cardElements = [];

    selectedCards.forEach((card, index) => {
        const cardElem = document.createElement("div");
        cardElem.classList.add("card");
        cardElem.style.width = `${baseCardWidth}px`;
        cardElem.style.height = `${baseCardWidth * 1.5}px`;

        const cardInner = document.createElement("div");
        cardInner.classList.add("card-inner");

        const cardBack = document.createElement("div");
        cardBack.classList.add("card-back");
        const backImg = document.createElement("img");
        backImg.src = "images/deck1.jpg";
        backImg.alt = "–ó–∞–¥–Ω—è—è —Å—Ç–æ—Ä–æ–Ω–∞ –∫–∞—Ä—Ç—ã";
        cardBack.appendChild(backImg);

        const cardFront = document.createElement("div");
        cardFront.classList.add("card-front");
        const frontImg = document.createElement("img");
        frontImg.src = `images/${card}.jpg`;
        frontImg.alt = card;
        cardFront.appendChild(frontImg);

        cardInner.appendChild(cardBack);
        cardInner.appendChild(cardFront);
        cardElem.appendChild(cardInner);

        // –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ä—Ç—ã –ø–æ —Ä—è–¥–∞–º
        if (index < 3) {
            // –ü–µ—Ä–≤—ã–π —Ä—è–¥: 3 –∫–∞—Ä—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 0, 1, 2)
            cardElem.style.left = `${startLeftFirstRow + (index * cardWidth)}px`;
            cardElem.style.top = `${firstRowTop}px`;
        } else if (index < 6) {
            // –í—Ç–æ—Ä–æ–π —Ä—è–¥: 3 –∫–∞—Ä—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 3, 4, 5)
            cardElem.style.left = `${startLeftSecondRow + ((index - 3) * cardWidth)}px`;
            cardElem.style.top = `${secondRowTop}px`;
        } else {
            // –¢—Ä–µ—Ç–∏–π —Ä—è–¥: 2 –∫–∞—Ä—Ç—ã (–∏–Ω–¥–µ–∫—Å—ã 6, 7)
            cardElem.style.left = `${startLeftThirdRow + ((index - 6) * cardWidth)}px`;
            cardElem.style.top = `${thirdRowTop}px`;
        }

        cardElem.style.animation = `spread-out 2s ease-in-out forwards ${index * 0.5}s`;
        animationDiv.appendChild(cardElem);
        cardElements.push(cardElem);
    });

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    const lastSpreadOutTime = 2000 + (selectedCards.length - 1) * 500;

    cardElements.forEach((cardElem, index) => {
        setTimeout(() => {
            cardElem.classList.add("flipped");
        }, lastSpreadOutTime + index * 500);
    });

    answerDiv.style.display = "block";
    document.getElementById("answer-text").innerText = ``;
    animationDiv.style.minHeight = `${thirdRowTop + deckHeight + 20}px`;
    smoothScrollTo(answerDiv, 6000);

    // –î–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
    const loadingDiv = document.getElementById("loading");
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å –º–µ–Ω—è—é—â–∏–º–∏—Å—è —Ñ—Ä–∞–∑–∞–º–∏ —á–µ—Ä–µ–∑ 10000 –º—Å
    setTimeout(() => {
        loadingDiv.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –∫–∞—Ä—Ç

        // –ú–∞—Å—Å–∏–≤ —Ñ—Ä–∞–∑ –¥–ª—è —Å–º–µ–Ω—ã
        const loadingMessages = [
            "–ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã...",
            "–§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ...",
            "–°–º–æ—Ç—Ä–∏–º –≤ –±—É–¥—É—â–µ–µ –¥–ª—è –≤–∞—Å..."
        ];
        let messageIndex = 0;
        const loadingText = document.getElementById("loading-text");

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Ñ—Ä–∞–∑—É —Å—Ä–∞–∑—É
        loadingText.innerText = loadingMessages[messageIndex];

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–º–µ–Ω—É —Ç–µ–∫—Å—Ç–∞ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
        const textInterval = setInterval(() => {
            messageIndex = (messageIndex + 1) % loadingMessages.length; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ –º–∞—Å—Å–∏–≤—É
            loadingText.innerText = loadingMessages[messageIndex];
        }, 3000);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º textInterval –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ
        window.loadingTextInterval = textInterval;
    }, 10000);

    // –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –∏–∑ —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    setTimeout(async () => {
        const gptResponse = await gptPromise;
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingDiv.style.display = "none";
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–º–µ–Ω—É —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –±—ã–ª –∑–∞–ø—É—â–µ–Ω
        if (window.loadingTextInterval) {
            clearInterval(window.loadingTextInterval);
        }
        const formattedGptResponse = gptResponse.replace(/\n/g, '<br>');
        const boldedResponse = formattedGptResponse.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        const cleanedResponse = boldedResponse.replace(/\*/g, '');
        const cleanedResponse1 = cleanedResponse.replace(/#/g, '');

        const answerText = `
            <strong style="font-size: 20px;">–í—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã:</strong><br><br>
            1) ${selectedCards[0]}<br>
            2) ${selectedCards[1]}<br>
            3) ${selectedCards[2]}<br>
            4) ${selectedCards[3]}<br>
            5) ${selectedCards[4]}<br>
            6) ${selectedCards[5]}<br>
            7) ${selectedCards[6]}<br>
            8) ${selectedCards[7]}<br>
            <hr class="divider">
            <strong style="font-size: 20px;">–û—Ç–≤–µ—Ç –Ω–∞ —Ä–∞—Å–∫–ª–∞–¥ —Å —É—á–µ—Ç–æ–º –≤—ã–ø–∞–≤—à–∏—Ö –∫–∞—Ä—Ç:</strong><br><br>
            ${cleanedResponse1}
        `;
        answerDiv.classList.add("show");
        document.getElementById("answer-text").innerHTML = answerText;
        thankBtn.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
        smoothScrollTo(answerDiv, 3000);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å–∫–ª–∞–¥–∞
        fetchRemainingRequests(userId);
    }, 100);
}

document.getElementById("start-btn").addEventListener("click", startReading);



if (typeof Telegram !== "undefined" && Telegram.WebApp) {
    Telegram.WebApp.ready();
    Telegram.WebApp.expand();
}