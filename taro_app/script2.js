// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
function smoothScrollTo(target, duration = 1000) {
    const start = window.scrollY;
    let targetPosition;

    if (target instanceof HTMLElement) {
        targetPosition = target.getBoundingClientRect().top + start - 50;
    } else {
        targetPosition = document.documentElement.scrollHeight - window.innerHeight;
    }

    const distance = targetPosition - start;
    let startTime = null;

    function animation(currentTime) {
        if (startTime === null) startTime = currentTime;
        const timeElapsed = currentTime - startTime;
        const progress = Math.min(timeElapsed / duration, 1);
        const ease = easeInOutQuad(progress);

        window.scrollTo(0, start + distance * ease);

        if (timeElapsed < duration) {
            requestAnimationFrame(animation);
        }
    }

    function easeInOutQuad(t) {
        return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;
    }

    requestAnimationFrame(animation);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
async function fetchRemainingRequests(userId) {
    try {
        const response = await fetch('https://ai-girls.ru/remaining-requests', {
            method: 'GET',
            headers: {
                'X-Telegram-User-Id': userId
            }
        });

        if (!response.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const data = await response.json();
        const remaining = data.remaining;
        document.getElementById("remaining-requests").innerText = `(–æ—Å—Ç–∞–ª–æ—Å—å –∑–∞–ø—Ä–æ—Å–æ–≤: ${remaining})`;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤:', error);
        document.getElementById("remaining-requests").innerText = ``;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ YandexGPT (–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async function getYandexGPTResponse(question, selectedCards, userId) {
    try {
        const response = await fetch('https://ai-girls.ru/yandex-gpt', {
            method: 'POST',
            headers: { 
                'Content-Type': 'application/json',
                'X-Telegram-User-Id': userId
            },
            body: JSON.stringify({ question, cards: selectedCards, user_id: userId })
        });

        if (!response.ok) {
            const data = await response.json();
            throw new Error(data.error || `–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
        }

        const data = await response.json();
        return data.response || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.';
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–∫—Å–∏:', error);
        return error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.';
    }
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–¥–ø–∏—Å–∏ "–°–ø–∞—Å–∏–±–æ üòä"
function showThanksMessage() {
    const thanksMessage = document.getElementById("thanks-message");
    thanksMessage.style.display = "block";
    thanksMessage.style.opacity = "1";

    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        thanksMessage.style.opacity = "0";
        setTimeout(() => {
            thanksMessage.style.display = "none";
        }, 500); // –ñ–¥—ë–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞—Ç—É—Ö–∞–Ω–∏—è
    }, 2000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
function updateButtonState() {
    const questionInput = document.getElementById("question").value;
    const startBtn = document.getElementById("start-btn");
    startBtn.disabled = !questionInput.trim();
}

document.getElementById("question").addEventListener("input", updateButtonState);
document.getElementById("thank-btn").addEventListener("click", showThanksMessage);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener("DOMContentLoaded", () => {
    const user = window.Telegram.WebApp.initDataUnsafe.user || {};
    const userId = user.id || "unknown";
    fetchRemainingRequests(userId); // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
});




// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å–∫–ª–∞–¥–∞ (–¥–æ–±–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
// ... –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–¥ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å–∫–ª–∞–¥–∞ (—Å –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∫–∞—Ä—Ç)
async function startReading() {
    const questionInput = document.getElementById("question").value;
    const question = questionInput.trim() + "\n–≠—Ç–æ —Ä–∞—Å–∫–ª–∞–¥ –¥–∞/–Ω–µ—Ç - —Ç–æ –µ—Å—Ç—å –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ª–∏–±–æ –¥–∞ –∏–ª–∏ –Ω–µ—Ç.";

    const user = window.Telegram.WebApp.initDataUnsafe.user || {};
    const userId = user.id || "unknown";

    const answerDiv = document.getElementById("answer");
    answerDiv.style.display = "none";
    document.getElementById("answer-text").innerText = "";
    const thankBtn = document.getElementById("thank-btn");
    thankBtn.style.display = "none"; // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–æ –æ—Ç–≤–µ—Ç–∞

    const animationDiv = document.getElementById("animation");
    animationDiv.innerHTML = ""; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    animationDiv.style.display = "flex"; // –ò—Å–ø–æ–ª—å–∑—É–µ–º flex –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    animationDiv.style.justifyContent = "center";
    animationDiv.style.alignItems = "center";
    animationDiv.style.height = "0px"; // –ó–∞–¥–∞–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞

    // –í—ã–±–∏—Ä–∞–µ–º 1 —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É
    const selectedCards = [];
    while (selectedCards.length < 1) {
        const randomIndex = Math.floor(Math.random() * cards.length);
        const card = cards[randomIndex];
        if (!selectedCards.includes(card)) {
            selectedCards.push(card);
        }
    }
    const selectedCard = selectedCards[0];

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∫–∞—Ä—Ç—ã
    const screenWidth = window.innerWidth;
    const baseCardWidth = screenWidth < 600 ? screenWidth / 3 - 20 : 120;
    const cardHeight = baseCardWidth * 1.5;

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∫–∞—Ä—Ç—ã
    const cardElem = document.createElement("div");
    cardElem.classList.add("card");
    cardElem.style.width = `${baseCardWidth}px`;
    cardElem.style.height = `${cardHeight}px`;

    const cardInner = document.createElement("div");
    cardInner.classList.add("card-inner");

    const cardBack = document.createElement("div");
    cardBack.classList.add("card-back");
    const backImg = document.createElement("img");
    backImg.src = "images/deck1.jpg";
    backImg.alt = "–ó–∞–¥–Ω—è—è —Å—Ç–æ—Ä–æ–Ω–∞ –∫–∞—Ä—Ç—ã";
    cardBack.appendChild(backImg);

    const cardFront = document.createElement("div");
    cardFront.classList.add("card-front");
    const frontImg = document.createElement("img");
    frontImg.src = `images/${selectedCard}.jpg`;
    frontImg.alt = selectedCard;
    cardFront.appendChild(frontImg);

    cardInner.appendChild(cardBack);
    cardInner.appendChild(cardFront);
    cardElem.appendChild(cardInner);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É –≤ animationDiv
    animationDiv.appendChild(cardElem);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ YandexGPT –∑–∞—Ä–∞–Ω–µ–µ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–º–∏—Å
    const gptPromise = getYandexGPTResponse(question, selectedCards, userId);

    // –ü–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –∫–∞—Ä—Ç—É —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
    setTimeout(() => {
        cardElem.classList.add("flipped");
    }, 2000);

    answerDiv.style.display = "block";
    document.getElementById("answer-text").innerText = ``;
    smoothScrollTo(animationDiv, 2500);

    // –î–ª—è –æ–∂–∏–¥–∞–Ω–∏—è
    const loadingDiv = document.getElementById("loading");
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å –º–µ–Ω—è—é—â–∏–º–∏—Å—è —Ñ—Ä–∞–∑–∞–º–∏ —á–µ—Ä–µ–∑ 2500 –º—Å
    setTimeout(() => {
        loadingDiv.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ—Å–ª–µ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –∫–∞—Ä—Ç

        // –ú–∞—Å—Å–∏–≤ —Ñ—Ä–∞–∑ –¥–ª—è —Å–º–µ–Ω—ã
        const loadingMessages = [
            "–ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –∑–∞–ø—Ä–æ—Å...",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—ã–ø–∞–≤—à–∏–µ –∫–∞—Ä—Ç—ã...",
            "–§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ...",
            "–°–º–æ—Ç—Ä–∏–º –≤ –±—É–¥—É—â–µ–µ –¥–ª—è –≤–∞—Å..."
        ];
        let messageIndex = 0;
        const loadingText = document.getElementById("loading-text");

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Ñ—Ä–∞–∑—É —Å—Ä–∞–∑—É
        loadingText.innerText = loadingMessages[messageIndex];

        // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–º–µ–Ω—É —Ç–µ–∫—Å—Ç–∞ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
        const textInterval = setInterval(() => {
            messageIndex = (messageIndex + 1) % loadingMessages.length; // –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ –º–∞—Å—Å–∏–≤—É
            loadingText.innerText = loadingMessages[messageIndex];
        }, 3000);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º textInterval –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –µ–≥–æ –ø–æ–∑–∂–µ
        window.loadingTextInterval = textInterval;
    }, 2500);


    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç
    setTimeout(async () => {
        const gptResponse = await gptPromise;
        // –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        loadingDiv.style.display = "none";
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–º–µ–Ω—É —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª –±—ã–ª –∑–∞–ø—É—â–µ–Ω
        if (window.loadingTextInterval) {
            clearInterval(window.loadingTextInterval);
        }
        const formattedGptResponse = gptResponse.replace(/\n/g, "<br>");
        const boldedResponse = formattedGptResponse.replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>");
        const cleanedResponse = boldedResponse.replace(/\*/g, "");
        const cleanedResponse1 = cleanedResponse.replace(/#/g, "");

        const answerText = `
            <strong style="font-size: 20px;">–í—ã–ø–∞–≤—à–∞—è –∫–∞—Ä—Ç–∞:</strong><br><br>
            1) ${selectedCard}<br>
            <hr class="divider">
            <strong style="font-size: 20px;">–û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–æ–ø—Ä–æ—Å —Å —É—á–µ—Ç–æ–º –≤—ã–ø–∞–≤—à–µ–π –∫–∞—Ä—Ç—ã:</strong><br><br>
            ${cleanedResponse1}
        `;
        answerDiv.classList.add("show");
        document.getElementById("answer-text").innerHTML = answerText;
        thankBtn.style.display = "block"; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞
        smoothScrollTo(answerDiv, 3000);

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—Ä–æ—Å–æ–≤
        fetchRemainingRequests(userId);
    }, 100);
}

document.getElementById("start-btn").addEventListener("click", startReading);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
if (typeof Telegram !== "undefined" && Telegram.WebApp) {
    Telegram.WebApp.ready();
    Telegram.WebApp.expand();
}
