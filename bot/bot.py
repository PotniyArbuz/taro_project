from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo, BotCommand
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes, MessageHandler, filters
from dotenv import load_dotenv
import os
import redis
import logging
import asyncio
from datetime import datetime, timezone
import requests
import uuid
import json
import re
from yookassa import Configuration, Payment

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

load_dotenv()

TOKEN = os.getenv("TELEGRAM_TOKEN")

APP_LINK = "t.me/TaroBestFreebot/Taro777"

YOOKASSA_SHOP_ID = os.getenv("YOOKASSA_SHOP_ID")
YOOKASSA_API_KEY = os.getenv("YOOKASSA_API_KEY")
Configuration.configure(YOOKASSA_SHOP_ID, YOOKASSA_API_KEY)

try:
    redis_client = redis.Redis(host='localhost', port=6379, db=0, decode_responses=True)
    redis_client.ping()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    logger.info("–£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ Redis")
except redis.ConnectionError as e:
    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Redis: {e}")
    raise

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /referral
async def referral(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    bot_username = (await context.bot.get_me()).username
    referral_link = f"https://t.me/{bot_username}?start={user_id}"
    await update.message.reply_text(
        f"–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}\n"
        "–ü–æ–¥–µ–ª–∏—Å—å –µ–π —Å –¥—Ä—É–∑—å—è–º–∏, –∏ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\"! üöÄ"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    username = update.effective_user.username or "unknown"
    chat_id = update.effective_chat.id
    logger.info(f"Chat ID –≤ bot.py: {chat_id}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
    if context.args:
        try:
            referrer_id = int(context.args[0])
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–∞–º —Å–µ–±–µ —Ä–µ—Ñ–µ—Ä–µ—Ä –∏ –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
            if referrer_id != user_id and not redis_client.sismember("bot_users", user_id):
                # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª–∞
                redis_client.sadd(f"referrals:{referrer_id}", user_id)
                # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å —Ä–µ—Ñ–µ—Ä–µ—Ä—É –Ω–∞ 24 —á–∞—Å–∞
                unique_id = datetime.now(timezone.utc).isoformat()
                bonus_key = f"user:{referrer_id}:daily_bonus:{unique_id}"
                redis_client.setex(bonus_key, 604800, 1)
                logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø—Ä–∏—à—ë–ª –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é {referrer_id}")
                try:
                    await context.bot.send_message(
                        referrer_id,
                        "–ö—Ç–æ-—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ!üí´\n–¢—ã –ø–æ–ª—É—á–∏–ª –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\"!\n\n–ù–∞–∂–∏–º–∞–π /start, –ø–µ—Ä–µ—Ö–æ–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤, –≤—ã–±–∏—Ä–∞–π —Ä–∞—Å–∫–ª–∞–¥ \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\" –∏ —É–∑–Ω–∞–π, —á—Ç–æ –∂–¥–µ—Ç —Ç–µ–±—è –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è üöÄ",
                        parse_mode="Markdown"
                    )
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–µ—Ñ–µ—Ä–µ—Ä—É {referrer_id}: {e}")
        except ValueError:
            logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Ä–µ—Ñ–µ—Ä–∞–ª–∞: {context.args[0]}")

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    if not redis_client.sismember("bot_users", user_id):
        redis_client.sadd("bot_users", user_id)
        redis_client.hset(f"user:{user_id}", "username", username)

    keyboard = [
        [InlineKeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã‚ú®", callback_data="free")],
        [InlineKeyboardButton(text="–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ãüíû", callback_data="menu")],
        [InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—Éüí∞", callback_data="sub")],
        [InlineKeyboardButton(text="–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–µ–º–∏—É–ºüöÄ", callback_data="referral")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        text=(
            "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –¢–∞—Ä–æ!* üé¥\n\n"
            "–ö–∞—Ä—Ç—ã –≥–æ—Ç–æ–≤—ã —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Ç–≤–æ—ë–º –±—É–¥—É—â–µ–º, –ª—é–±–≤–∏ –∏ —Å–∫—Ä—ã—Ç—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.\n"
            "–í—ã–±–µ—Ä–∏ —Ä–∞—Å–∫–ª–∞–¥ –∏ —É–∑–Ω–∞–π, —á—Ç–æ –∂–¥—ë—Ç —Ç–µ–±—è –≤–ø–µ—Ä–µ–¥–∏ ‚ú®"
        ),
        reply_markup=reply_markup,
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback-–∑–∞–ø—Ä–æ—Å–æ–≤
async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    chat_id = query.message.chat_id
    user_id = query.from_user.id
    callback_data = query.data
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ–∂–∏–¥–∞–Ω–∏–µ email –ø—Ä–∏ –ª—é–±–æ–º –¥–µ–π—Å—Ç–≤–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    if context.user_data.get('awaiting_email'):
        context.user_data['awaiting_email'] = False

    if callback_data == "premium7_info":
        info_message = (
            "*–†–∞—Å–∫–ª–∞–¥ \"–ß—Ç–æ –º–µ–∂–¥—É –Ω–∞–º–∏?\"* üíñ\n\n"
            "–•–æ—á–µ—à—å –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ —Å–µ—Ä–¥—Ü–µ —Ç–æ–≥–æ, –∫—Ç–æ —Ç–µ–±–µ —Ç–∞–∫ –≤–∞–∂–µ–Ω? "
            "–≠—Ç–æ—Ç —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 7 –∫–∞—Ä—Ç —Ä–∞—Å–∫—Ä–æ–µ—Ç –≤—Å–µ —Ç–∞–π–Ω—ã –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–π. üå∏\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "*1. –ö–∞–∫ –æ–Ω(–∞) —Ç–µ–±—è –≤–∏–¥–∏—Ç?* ‚Äî –ß—Ç–æ –æ–Ω(–∞) –¥—É–º–∞–µ—Ç –æ —Ç–µ–±–µ, –∫–æ–≥–¥–∞ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —Ç–µ–±—è?\n"
            "*2. –ö–∞–∫ –æ–Ω(–∞) —Ç–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç?* ‚Äî –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ —Ç—ã –≤—ã–∑—ã–≤–∞–µ—à—å –≤ –µ–≥–æ(–µ—ë) —Å–µ—Ä–¥—Ü–µ?\n"
            "*3. –ö–∞–∫ –æ–Ω(–∞) –≤–µ–¥—ë—Ç —Å–µ–±—è –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ?* ‚Äî –ß—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∑–∞ –µ–≥–æ(–µ—ë) –ø–æ—Å—Ç—É–ø–∫–∞–º–∏?\n"
            "*4. –ö–∞–∫ –æ–Ω(–∞) –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤–∞—à–∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è?* ‚Äî –ß—Ç–æ –¥–ª—è –Ω–µ–≥–æ(–Ω–µ—ë) –∑–Ω–∞—á–∞—Ç –≤–∞—à–∏ —Å–≤—è–∑–∏?\n"
            "*5. –ß–µ–≥–æ –æ–Ω(–∞) —Ö–æ—á–µ—Ç –æ—Ç —Ç–µ–±—è?* ‚Äî –ï–≥–æ(–µ—ë) –∏—Å—Ç–∏–Ω–Ω—ã–µ –∂–µ–ª–∞–Ω–∏—è –∏ –æ–∂–∏–¥–∞–Ω–∏—è.\n"
            "*6. –ß—Ç–æ –º–µ—à–∞–µ—Ç –≤–∞—à–∏–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º?* ‚Äî –ö–∞–∫–∏–µ –ø—Ä–µ–≥—Ä–∞–¥—ã —Å—Ç–æ—è—Ç –Ω–∞ –≤–∞—à–µ–º –ø—É—Ç–∏?\n"
            "*7. –í–æ–∑–º–æ–∂–Ω–æ–µ –±—É–¥—É—â–µ–µ.* ‚Äî –ö—É–¥–∞ –ø—Ä–∏–≤–µ–¥—ë—Ç –≤–∞—Å —ç—Ç–∞ –¥–æ—Ä–æ–≥–∞?\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: *99 —Ä—É–±–ª–µ–π*.\n"
            "*–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.*\n"
        )
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É
        has_access = redis_client.exists(f"user:{user_id}:premium_access")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/premium7?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n*–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:*",
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "premium7"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email

    elif callback_data == "sovmestimost_info":
        info_message = (
            "*–†–∞—Å–∫–ª–∞–¥ \"–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å\"* üíû\n\n"
            "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –ø–æ–¥—Ö–æ–¥–∏—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥—É? "
            "–≠—Ç–æ—Ç —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 8 –∫–∞—Ä—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –≤–∞—Å –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç, –∞ —á—Ç–æ –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –≤—ã–∑–æ–≤–æ–º. üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "*1. –°—É—â–Ω–æ—Å—Ç—å –ø–µ—Ä–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞* - –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –∫–∞—á–µ—Å—Ç–≤, –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–æ–∫ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞.\n"
            "*2. –°—É—â–Ω–æ—Å—Ç—å –≤—Ç–æ—Ä–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞* - –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚Äî –µ–≥–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —Ü–µ–Ω–Ω–æ—Å—Ç–∏.\n"
            "*3. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ* - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Å—Ö–æ–¥—è—Ç—Å—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ –æ–±–æ–∏—Ö –ª—é–¥–µ–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∏—Ö –ø–æ—Ç–æ–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.\n"
            "*4. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏–µ* - –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –±–ª–∏–∑–∫–æ –æ–Ω–∏ –æ—â—É—â–∞—é—Ç –∏ –ø–æ–Ω–∏–º–∞—é—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –∫–∞–∫ –≤—ã—Ä–∞–∂–∞—é—Ç—Å—è —á—É–≤—Å—Ç–≤–∞.\n"
            "*5. –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ç–∏–≤–Ω–∞—è —Å–≤—è–∑—å* - –†–∞—Å–∫—Ä—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –≤–∑–∞–∏–º–æ–ø–æ–Ω–∏–º–∞–Ω–∏—è –≤ –æ–±—â–µ–Ω–∏–∏, —Å—Ö–æ–¥—Å—Ç–≤–æ –≤–∑–≥–ª—è–¥–æ–≤ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–µ–ª–∏—Ç—å—Å—è –º—ã—Å–ª—è–º–∏.\n"
            "*6. –§–∏–∑–∏—á–µ—Å–∫–∞—è –∏ —Å–µ–∫—Å—É–∞–ª—å–Ω–∞—è —Ö–∏–º–∏—è* - –£–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å—Ç–µ–ø–µ–Ω—å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏—Ç—è–∂–µ–Ω–∏—è –∏ —Å–µ–∫—Å—É–∞–ª—å–Ω—É—é –≥–∞—Ä–º–æ–Ω–∏—é –º–µ–∂–¥—É –ø–∞—Ä—Ç–Ω—ë—Ä–∞–º–∏.\n"
            "*7. –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –≤—ã–∑–æ–≤—ã* - –û–±–æ–∑–Ω–∞—á–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–ª–∏—è—Ç—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–π.\n"
            "*8. –û–±—â–µ–µ –±—É–¥—É—â–µ–µ –∏ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ* - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç–Ω–æ—à–µ–Ω–∏–π, –≤–æ–∑–º–æ–∂–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –ø—É—Ç–∏ –∏ –¥–∞—ë—Ç —Å–æ–≤–µ—Ç –ø–æ –¥–∞–ª—å–Ω–µ–π—à–∏–º –¥–µ–π—Å—Ç–≤–∏—è–º.\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: *99 —Ä—É–±–ª–µ–π*.\n"
            "*–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.*\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:sovmestimost_access")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/sovmestimost?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n*–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:*",
                reply_markup=reply_markup,
                parse_mode="Markdown"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "sovmestimost"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "sad_talantov_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–°–∞–¥ —Ç–∞–ª–∞–Ω—Ç–æ–≤\"</b> üå∏\n\n"
            "–•–æ—á–µ—à—å —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–≤–æ–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç—å –∫ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏?\n"
            "–≠—Ç–æ—Ç –≥–ª—É–±–æ–∫–∏–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 9 –∫–∞—Ä—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ —Ç–∞–ª–∞–Ω—Ç—ã –≤ —Ç–µ–±–µ —Å–∫—Ä—ã—Ç—ã, —á—Ç–æ –º–µ—à–∞–µ—Ç –∏—Ö –ø—Ä–æ—è–≤–ª–µ–Ω–∏—é –∏ –∫–∞–∫ —Ä–∞—Å—Ü–≤–µ—Å—Ç–∏ –≤ –ø–æ–ª–Ω–æ–π –º–µ—Ä–µ! üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –Ø–¥—Ä–æ –ª–∏—á–Ω–æ—Å—Ç–∏</b> - –ö—Ç–æ —Ç—ã –≤ –≥–ª—É–±–∏–Ω–µ –¥—É—à–∏, –∫–∞–∫–æ–π –≥–ª–∞–≤–Ω—ã–π –¥–∞—Ä –ª–µ–∂–∏—Ç –≤ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–µ–≥–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–∞?\n"
            "<b>2. –ü—Ä–æ—à–ª—ã–π –æ–ø—ã—Ç</b> - –ö–∞–∫ —Ç–≤–æ–∏ —Ç–∞–ª–∞–Ω—Ç—ã –ø—Ä–æ—è–≤–ª—è–ª–∏—Å—å —Ä–∞–Ω—å—à–µ –∏ —á—Ç–æ –æ–Ω–∏ —Ç–µ–±–µ –¥–∞–ª–∏?\n"
            "<b>3. –¢–µ–∫—É—â–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å</b> - –ì–¥–µ –∏ –∫–∞–∫ —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?\n"
            "<b>4. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –±–∞—Ä—å–µ—Ä</b> - –ö–∞–∫–∏–µ —Å—Ç—Ä–∞—Ö–∏ –∏–ª–∏ —É–±–µ–∂–¥–µ–Ω–∏—è —Å–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç–≤–æ—é —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é?\n"
            "<b>5. –í–Ω–µ—à–Ω–∏–π –±–∞—Ä—å–µ—Ä</b> - –ö–∞–∫–∏–µ –≤–Ω–µ—à–Ω–∏–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –º–µ—à–∞—é—Ç —Ä–∞—Å–∫—Ä—ã—Ç–∏—é —Ç–≤–æ–∏—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤?\n"
            "<b>6. –ö–ª—é—á–µ–≤–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b> - –ö–∞–∫–æ–π —à–∞–≥ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—è–≤–ª—è—Ç—å —Å–≤–æ–∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏?\n"
            "<b>7. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è</b> - –ö—Ç–æ –∏–ª–∏ —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–∏—è—Ç—å —è—Ä—á–µ?\n"
            "<b>8. –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b> - –ß—Ç–æ –ø—Ä–∏–Ω–µ—Å—ë—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–≤–æ–∏—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤ –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º?\n"
            "<b>9. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ –≤–∏–¥–µ–Ω–∏–µ</b> - –ö—É–¥–∞ –ø—Ä–∏–≤–µ–¥—ë—Ç —Ä–∞–∑–≤–∏—Ç–∏–µ —Ç–≤–æ–∏—Ö —Ç–∞–ª–∞–Ω—Ç–æ–≤ –≤ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ?\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>149</s> 99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        bonus_keys = redis_client.keys(f"user:{user_id}:sad_talantov_bonus:*")
        has_access = redis_client.exists(f"user:{user_id}:sad_talantov_access") or len(bonus_keys) > 0
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/sad_talantov?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "sad_talantov"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "volna_peremen_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–í–æ–ª–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω\"</b> üåä\n\n"
            "–ì–æ—Ç–æ–≤ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω—ã —Å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å—é?\n"
            "–≠—Ç–æ—Ç –≥–ª—É–±–æ–∫–∏–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 8 –∫–∞—Ä—Ç –ø–æ–º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏, –∫–∞–∫ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º –∏ –∫–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ–Ω–∏ –Ω–µ—Å—É—Ç! üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è</b> - –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?\n"
            "<b>2. –ü—Ä–∏—á–∏–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω</b> - –ß—Ç–æ –≤—ã–∑–≤–∞–ª–æ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –ø–æ—á–µ–º—É –æ–Ω–∏ –ø—Ä–∏—à–ª–∏?\n"
            "<b>3. –°—Ç—Ä–∞—Ö –∏–ª–∏ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ</b> - –ß—Ç–æ –º–µ—à–∞–µ—Ç —Ç–µ–±–µ –ø—Ä–∏–Ω—è—Ç—å –ø–µ—Ä–µ–º–µ–Ω—ã?\n"
            "<b>4. –°–∫—Ä—ã—Ç–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å</b> - –ö–∞–∫–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ç–∞—è—Ç –≤ —Å–µ–±–µ —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è?\n"
            "<b>5. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b> - –ö–∞–∫–æ–π —à–∞–≥ –ø–æ–º–æ–∂–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º?\n"
            "<b>6. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è</b> - –ö—Ç–æ –∏–ª–∏ —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –≤ —ç—Ç–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ?\n"
            "<b>7. –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π –∏—Å—Ö–æ–¥</b> - –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–º –±—É–¥—É—â–µ–º?\n"
            "<b>8. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b> - –ö—É–¥–∞ –ø—Ä–∏–≤–µ–¥—É—Ç —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω—ã –≤ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ?\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>149</s> 99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        bonus_keys = redis_client.keys(f"user:{user_id}:volna_peremen_bonus:*")
        has_access = redis_client.exists(f"user:{user_id}:volna_peremen_access") or len(bonus_keys) > 0
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/volna_peremen?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "volna_peremen"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "probuzhdenie_dushi_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –¥—É—à–∏\"</b> ‚ú®\n\n"
            "–•–æ—á–µ—à—å –Ω–∞–π—Ç–∏ —Å–≤–æ–π –∏—Å—Ç–∏–Ω–Ω—ã–π –ø—É—Ç—å –∏ —Ä–∞—Å–∫—Ä—ã—Ç—å –¥—É—Ö–æ–≤–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª?\n"
            "–≠—Ç–æ—Ç –≥–ª—É–±–æ–∫–∏–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 9 –∫–∞—Ä—Ç –ø–æ–º–æ–∂–µ—Ç –ø–æ–Ω—è—Ç—å, –≥–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –Ω–∞ –¥—É—Ö–æ–≤–Ω–æ–º –ø—É—Ç–∏, –∫–∞–∫–∏–µ —É—Ä–æ–∫–∏ –∂–¥—É—Ç –∏ –∫–∞–∫ —Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å –≤—ã—Å—à–∏–º –Ø! üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –î—É—à–∞ —Å–µ–π—á–∞—Å</b> - –ö–∞–∫–æ–≤–æ —Ç–≤–æ—ë —Ç–µ–∫—É—â–µ–µ –¥—É—Ö–æ–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ?\n"
            "<b>2. –ü—Ä–æ—à–ª—ã–π –¥—É—Ö–æ–≤–Ω—ã–π –æ–ø—ã—Ç</b> - –ß—Ç–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–æ —Ç–≤–æ–π –¥—É—Ö–æ–≤–Ω—ã–π –ø—É—Ç—å?\n"
            "<b>3. –°–∫—Ä—ã—Ç—ã–π –¥–∞—Ä</b> - –ö–∞–∫–æ–π –¥—É—Ö–æ–≤–Ω—ã–π —Ç–∞–ª–∞–Ω—Ç –∏–ª–∏ –∏–Ω—Ç—É–∏—Ü–∏—è –≤ —Ç–µ–±–µ —Å–∫—Ä—ã—Ç—ã?\n"
            "<b>4. –¢–µ–∫—É—â–∏–π —É—Ä–æ–∫</b> - –ö–∞–∫–æ–π —É—Ä–æ–∫ –í—Å–µ–ª–µ–Ω–Ω–∞—è –ø—Ä–µ–ø–æ–¥–∞—ë—Ç —Ç–µ–±–µ —Å–µ–π—á–∞—Å?\n"
            "<b>5. –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–∞ –ø—É—Ç–∏</b> - –ß—Ç–æ –±–ª–æ–∫–∏—Ä—É–µ—Ç —Ç–≤–æ–π –¥—É—Ö–æ–≤–Ω—ã–π —Ä–æ—Å—Ç?\n"
            "<b>6. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b> - –ö–∞–∫–æ–π —à–∞–≥ –ø—Ä–∏–±–ª–∏–∑–∏—Ç —Ç–µ–±—è –∫ –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—é?\n"
            "<b>7. –í–Ω–µ—à–Ω—è—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b> - –ö—Ç–æ –∏–ª–∏ —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞ —Ç–≤–æ—ë–º –ø—É—Ç–∏?\n"
            "<b>8. –ë—É–¥—É—â–∏–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª</b> - –ö —á–µ–º—É –ø—Ä–∏–≤–µ–¥—ë—Ç —Ç–≤–æ–π –¥—É—Ö–æ–≤–Ω—ã–π —Ä–æ—Å—Ç?\n"
            "<b>9. –ü–æ—Å–ª–∞–Ω–∏–µ –≤—ã—Å—à–∏—Ö —Å–∏–ª</b> - –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–æ–≤–µ—Ç –æ—Ç –∫–∞—Ä—Ç –¥–ª—è —Ç–≤–æ–µ–π –¥—É—à–∏.\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>149</s> 99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        bonus_keys = redis_client.keys(f"user:{user_id}:probuzhdenie_dushi_bonus:*")
        has_access = redis_client.exists(f"user:{user_id}:probuzhdenie_dushi_access") or len(bonus_keys) > 0
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/probuzhdenie_dushi?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "probuzhdenie_dushi"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "lestnitsa_kariery_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–õ–µ—Å—Ç–Ω–∏—Ü–∞ –∫–∞—Ä—å–µ—Ä—ã\"</b> üöÄ\n\n"
            "–ú–µ—á—Ç–∞–µ—à—å –æ –∫–∞—Ä—å–µ—Ä–Ω–æ–º –ø—Ä–æ—Ä—ã–≤–µ –∏–ª–∏ –Ω–æ–≤–æ–º —ç—Ç–∞–ø–µ –≤ —Ä–∞–±–æ—Ç–µ?\n"
            "–≠—Ç–æ—Ç –≥–ª—É–±–æ–∫–∏–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 9 –∫–∞—Ä—Ç –ø–æ–∫–∞–∂–µ—Ç, –≥–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º –ø–ª–∞–Ω–µ, —á—Ç–æ –º–µ—à–∞–µ—Ç —É—Å–ø–µ—Ö—É –∏ –∫–∞–∫ –¥–æ—Å—Ç–∏—á—å –≤–µ—Ä—à–∏–Ω—ã! üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –ü—Ä–æ—à–ª–æ–µ –≤ –∫–∞—Ä—å–µ—Ä–µ</b> - –ß—Ç–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–ª–æ —Ç–≤–æ—é —Ç–µ–∫—É—â—É—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é?\n"
            "<b>2. –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è</b> - –ì–¥–µ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ —Å–≤–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?\n"
            "<b>3. –°–∫—Ä—ã—Ç—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª</b> - –ö–∞–∫–∏–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–ª–∏ —Ç–∞–ª–∞–Ω—Ç—ã —É —Ç–µ–±—è –µ—Å—Ç—å?\n"
            "<b>4. –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–∞ –ø—É—Ç–∏</b> - –ß—Ç–æ –º–µ—à–∞–µ—Ç —Ç–≤–æ–µ–º—É –∫–∞—Ä—å–µ—Ä–Ω–æ–º—É —Ä–æ—Å—Ç—É?\n"
            "<b>5. –ö–ª—é—á–µ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å</b> - –ö–∞–∫–æ–π —à–∞–Ω—Å —Å—Ç–æ–∏—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è?\n"
            "<b>6. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ</b> - –ö–∞–∫–æ–π —à–∞–≥ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?\n"
            "<b>7. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è</b> - –ö—Ç–æ –∏–ª–∏ —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤ —Ç–≤–æ–µ–π –∫–∞—Ä—å–µ—Ä–µ?\n"
            "<b>8. –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç</b> - –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ –º–µ—Å—è—Ü—ã?\n"
            "<b>9. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞</b> - –ö—É–¥–∞ –ø—Ä–∏–≤–µ–¥—ë—Ç —Ç–≤–æ–π —Ç–µ–∫—É—â–∏–π –∫–∞—Ä—å–µ—Ä–Ω—ã–π –ø—É—Ç—å?\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>149</s> 99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        bonus_keys = redis_client.keys(f"user:{user_id}:lestnitsa_kariery_bonus:*")
        has_access = redis_client.exists(f"user:{user_id}:lestnitsa_kariery_access") or len(bonus_keys) > 0
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/lestnitsa_kariery?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "lestnitsa_kariery"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "finance_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª\"</b> üíµ\n\n"
            "–•–æ—á–µ—à—å —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–≤–æ–∏ –¥–µ–Ω–µ–∂–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏?\n"
            "–≠—Ç–æ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ –∏–∑ 7 –∫–∞—Ä—Ç –ø–æ–∫–∞–∂–µ—Ç, –≥–¥–µ —Ç—ã —Å–µ–π—á–∞—Å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º –ø–ª–∞–Ω–µ, —á—Ç–æ —Ç–µ–±–µ –º–µ—à–∞–µ—Ç —Ä–∞–∑–±–æ–≥–∞—Ç–µ—Ç—å –∏ –≥–¥–µ —Å–∫—Ä—ã—Ç—ã —Ç–≤–æ–∏ –¥–µ–Ω–µ–∂–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã. üåü\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –¢–µ–∫—É—â–µ–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ</b> - —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å–µ–π—á–∞—Å –≤ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å—Ñ–µ—Ä–µ, –∫–∞–∫–æ–≤—ã –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏ —ç–Ω–µ—Ä–≥–∏—è.\n"
            "<b>2. –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ</b> - —Ç–æ, —á—Ç–æ –º–µ—à–∞–µ—Ç —É–ª—É—á—à–∏—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã: –≤–Ω–µ—à–Ω–∏–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –ø–æ–≤–µ–¥–µ–Ω–∏–µ.\n"
            "<b>3. –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–æ—Ö–æ–¥–∞</b> - –≥–¥–µ –ª–µ–∂–∏—Ç –≥–ª–∞–≤–Ω—ã–π –∏–ª–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–µ–Ω–µ–≥, –Ω–∞ —á—Ç–æ —Å—Ç–æ–∏—Ç –æ–ø–µ—Ä–µ—Ç—å—Å—è.\n"
            "<b>4. –°–∫—Ä—ã—Ç—ã–µ —Ä–µ—Å—É—Ä—Å—ã</b> - —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏, —Å–≤—è–∑–∏, —Ç–∞–ª–∞–Ω—Ç—ã –∏–ª–∏ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –Ω–æ –æ–Ω–∏ –ø–æ–∫–∞ –Ω–µ –æ—Å–æ–∑–Ω–∞–Ω—ã.\n"
            "<b>5. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –±—É–¥—É—â–µ–µ (–±–ª–∏–∂–∞–π—à–µ–µ)</b> - –∫–∞–∫ –±—É–¥—É—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è —Å–æ–±—ã—Ç–∏—è –≤ –±–ª–∏–∂–∞–π—à–µ–º –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –≤—Å—ë –ø–æ–π–¥—ë—Ç –ø–æ —Ç–µ–∫—É—â–µ–º—É —Å—Ü–µ–Ω–∞—Ä–∏—é.\n"
            "<b>6. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –±—É–¥—É—â–µ–µ (–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–µ)</b> - –æ–±—â–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ —Ä–∞–∑–≤–∏—Ç–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –≤ –±–æ–ª–µ–µ –æ—Ç–¥–∞–ª—ë–Ω–Ω–æ–π –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–µ.\n"
            "<b>7. –°–æ–≤–µ—Ç –¢–∞—Ä–æ</b> - —á—Ç–æ —Å—Ç–æ–∏—Ç –¥–µ–ª–∞—Ç—å, —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å–≤–æ—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å–∏—Ç—É–∞—Ü–∏—é, –≤ –∫–∞–∫–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –¥–≤–∏–≥–∞—Ç—å—Å—è.\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b>99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:finance_access")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/finance?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "finance"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "daily_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\"</b> üíµ\n\n"
            "–ö–∞–∂–¥—ã–π –Ω–æ–≤—ã–π –¥–µ–Ω—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥ –≤–∞–º–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, –∏ —ç—Ç–æ—Ç —Ä–∞—Å–∫–ª–∞–¥ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–π—Ç–∏ —Ç–æ—á–∫—É –æ–ø–æ—Ä—ã, –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã –∏ –∏–∑–±–µ–∂–∞—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –ª–æ–≤—É—à–µ–∫! üí´\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –£—Ç—Ä–µ–Ω–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–π</b> ‚Äî —Å –∫–∞–∫–∏–º —ç–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–º —Ñ–æ–Ω–æ–º —Ç—ã –≤—Ö–æ–¥–∏—à—å –≤ –¥–µ–Ω—å, —á—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ç–≤–æ—ë —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏–µ –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å —Å–∞–º–æ–≥–æ —É—Ç—Ä–∞.\n"
            "<b>2. –ì–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞</b> ‚Äî –Ω–∞ —á—ë–º —Å—Ç–æ–∏—Ç —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è, –≤ –∫–∞–∫–æ–π —Å—Ñ–µ—Ä–µ –±—É–¥–µ—Ç –≤–∞–∂–Ω–æ –ø—Ä–æ—è–≤–∏—Ç—å—Å—è.\n"
            "<b>3. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ</b> ‚Äî –≤–æ–∑–º–æ–∂–Ω—ã–µ –ª–æ–≤—É—à–∫–∏, –æ—à–∏–±–∫–∏ –∏–ª–∏ —Å–æ–±—ã—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–±–∏—Ç—å —Å –ø—É—Ç–∏ –∏–ª–∏ —É—Å–ª–æ–∂–Ω–∏—Ç—å –¥–µ–Ω—å.\n"
            "<b>4. –†–µ—Å—É—Ä—Å –¥–Ω—è</b> ‚Äî —Ç–≤–æ—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞: –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞, –≤–Ω–µ—à–Ω–∏–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –∏–ª–∏ –ª—é–¥–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –∑–∞–¥–∞—á–∞–º–∏.\n"
            "<b>5. –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ—Å—Ç—å</b> ‚Äî —á—Ç–æ –º–æ–∂–µ—Ç –≤–Ω–µ–∑–∞–ø–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è –∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç —Ç–≤–æ–µ–≥–æ –≤–Ω–∏–º–∞–Ω–∏—è –∏–ª–∏ —Ä–µ–∞–∫—Ü–∏–∏.\n"
            "<b>6. –í–µ—á–µ—Ä–Ω–∏–π —É—Ä–æ–∫</b> ‚Äî —á–µ–º—É –Ω–∞—É—á–∏—Ç —ç—Ç–æ—Ç –¥–µ–Ω—å, –∫–∞–∫–æ–π –æ–ø—ã—Ç —Ç—ã –ø–æ–ª—É—á–∏—à—å –∫ –µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é.\n"
            "<b>7. –í—ã–≤–æ–¥ –¥–Ω—è</b> ‚Äî –∏—Ç–æ–≥–æ–≤–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –¢–∞—Ä–æ: —Å —á–µ–º —Ç—ã –∑–∞–≤–µ—Ä—à–∏—à—å –¥–µ–Ω—å –∏ —á—Ç–æ –≤–∞–∂–Ω–æ –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π.\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>99</s> 49 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        bonus_keys = redis_client.keys(f"user:{user_id}:daily_bonus:*")
        has_access = redis_client.exists(f"user:{user_id}:daily_access") or len(bonus_keys) > 0
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/daily?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "daily"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "month_info":
        info_message = (
            "<b>–†–∞—Å–∫–ª–∞–¥ \"–ú–µ—Å—è—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑\"</b> üåô\n\n"
            "–•–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å, —á—Ç–æ –≥–æ—Ç–æ–≤–∏—Ç —Ç–µ–±–µ –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü? –≠—Ç–æ—Ç —Ä–∞—Å–∫–ª–∞–¥ –æ—Ç–∫—Ä–æ–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è, –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏ —Å–∫—Ä—ã—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏. –ö–∞—Ä—Ç—ã –ø–æ–¥—Å–∫–∞–∂—É—Ç, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –∫–∞–∫ –ø—Ä–æ–∂–∏—Ç—å –º–µ—Å—è—Ü –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ! üí´\n\n"
            "–í–æ—Ç —á—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å:\n"
            "<b>1. –û–±—â–∞—è —ç–Ω–µ—Ä–≥–∏—è –º–µ—Å—è—Ü–∞</b> ‚Äî –∫–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –±—É–¥—É—Ç —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—Ç—å —Ç–µ–±—è –≤ —Ç–µ—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞, –∫–∞–∫–æ–π –±—É–¥–µ—Ç –æ–±—â–∏–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏ —Å–æ–±—ã—Ç–∏–π–Ω—ã–π —Ñ–æ–Ω.\n"
            "<b>2. –ì–ª–∞–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –º–µ—Å—è—Ü–∞</b> ‚Äî –∫–ª—é—á–µ–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –ø–æ–≤–æ—Ä–æ—Ç–Ω—ã–π –º–æ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–∫–∞–∂–µ—Ç –Ω–∞–∏–±–æ–ª—å—à–µ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ç–≤–æ—é –∂–∏–∑–Ω—å.\n"
            "<b>3. –§–∏–Ω–∞–Ω—Å—ã –∏ —Ä–∞–±–æ—Ç–∞</b> ‚Äî —á—Ç–æ –∂–¥—ë—Ç –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Å—Ñ–µ—Ä–µ: –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏, —Ä–∏—Å–∫–∏ –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–æ—Å—Ç–∞.\n"
            "<b>4. –õ–∏—á–Ω–∞—è –∂–∏–∑–Ω—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è</b> ‚Äî –∫–∞–∫ –±—É–¥—É—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∏/–∏–ª–∏ —Å–µ–º–µ–π–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è, –Ω–æ–≤—ã–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω—ã.\n"
            "<b>5. –ó–¥–æ—Ä–æ–≤—å–µ –∏ —ç–Ω–µ—Ä–≥–∏—è</b> ‚Äî –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –≤ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–º –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∫–∞–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å–Ω–æ—Å—Ç—å.\n"
            "<b>6. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏ –¥–∞—Ä—ã –º–µ—Å—è—Ü–∞</b> ‚Äî –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —à–∞–Ω—Å—ã, —É–¥–∞—á–Ω—ã–µ —Å—Ç–µ—á–µ–Ω–∏—è –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤, —Å–∫—Ä—ã—Ç—ã–µ –ø–ª—é—Å—ã –ø–µ—Ä–∏–æ–¥–∞.\n"
            "<b>7. –°–æ–≤–µ—Ç –¢–∞—Ä–æ</b> ‚Äî –∫–∞–∫ –ª—É—á—à–µ –≤—Å–µ–≥–æ –ø—Ä–æ–∂–∏—Ç—å —ç—Ç–æ—Ç –º–µ—Å—è—Ü: —á—Ç–æ —É—Å–∏–ª–∏—Ç—å, —á—Ç–æ –æ—Ç–ø—É—Å—Ç–∏—Ç—å, –Ω–∞ —á—Ç–æ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ–∫—É—Å.\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞—Å–∫–ª–∞–¥–∞: <b><s>199</s> 99 —Ä—É–±–ª–µ–π</b>.\n"
            "<b>–†–∞—Å–∫–ª–∞–¥ —Ç–∞–∫ –∂–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ —ç—Ç–æ—Ç —á–∞—Ç.</b>\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:month_access")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–°–¥–µ–ª–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru/month?chat_id={chat_id}"))],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message,
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "month"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "referral":
        user_id = update.effective_user.id
        bot_username = (await context.bot.get_me()).username
        referral_link = f"https://t.me/{bot_username}?start={user_id}"
        info_message = (
            f"–¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}\n"
            "–ü–æ–¥–µ–ª–∏—Å—å –µ–π —Å –¥—Ä—É–∑—å—è–º–∏, –∏ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç—ã –ø–æ–ª—É—á–∏—à—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–∫–ª–∞–¥—É \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\"! üöÄ"
        )
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ WebApp
        keyboard = [
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(
            text=info_message,
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
    elif callback_data == "menu":
        keyboard = [
            [InlineKeyboardButton(text="\"–°–∞–¥ —Ç–∞–ª–∞–Ω—Ç–æ–≤\"üå∏", callback_data="sad_talantov_info")],
            [InlineKeyboardButton(text="\"–í–æ–ª–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω\"üåä", callback_data="volna_peremen_info")],
            [InlineKeyboardButton(text="\"–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –¥—É—à–∏\"‚ú®", callback_data="probuzhdenie_dushi_info")],
            [InlineKeyboardButton(text="\"–õ–µ—Å—Ç–Ω–∏—Ü–∞ –∫–∞—Ä—å–µ—Ä—ã\"üöÄ", callback_data="lestnitsa_kariery_info")],
            [InlineKeyboardButton(text="\"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\"üí´", callback_data="daily_info")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(
            text=(
                "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤!* üåü\n\n"
                "*–ü–æ—á–µ–º—É –ø—Ä–µ–º–∏—É–º?*\n"
                "*1. –û—Ç–≤–µ—Ç –Ω–∞–≤—Å–µ–≥–¥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ —á–∞—Ç–µ* ‚Äî —Ç—ã –≤—Å–µ–≥–¥–∞ —Å–º–æ–∂–µ—à—å –ø–µ—Ä–µ—á–∏—Ç–∞—Ç—å –µ–≥–æ, –¥–∞–∂–µ —á–µ—Ä–µ–∑ –º–µ—Å—è—Ü—ã! ‚è≥\n"
                "*2. –ú–∏–Ω–∏–º—É–º 7 –∫–∞—Ä—Ç* ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç ¬´–¥–∞/–Ω–µ—Ç¬ª. –ö–∞–∂–¥–∞—è –ø–æ–∑–∏—Ü–∏—è —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–π —Å–ª–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏: –ø—Ä–∏—á–∏–Ω—ã, —Å–∫—Ä—ã—Ç—ã–µ –≤–ª–∏—è–Ω–∏—è, –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏–π, –ø—Ä–æ–≥–Ω–æ–∑. ‚ú®\n"
                "*3. –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ* ‚Äî –Ω–∞–∏–±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–¥—Ä–æ–±–Ω—ã–π –≤—ã–≤–æ–¥ –∏–∑ —Å–∏—Ç—É–∞—Ü–∏–∏. üìú\n\n"
                "–°–∫–æ—Ä–µ–µ –≤—ã–±–∏—Ä–∞–π —Ä–∞—Å–∫–ª–∞–¥ –∏ –ø–æ–≥—Ä—É–∑–∏—Å—å –≤ –º–∏—Ä, –≥–¥–µ –∫–∞–∂–¥–∞—è –¥–µ—Ç–∞–ª—å –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ! üíû"
            ),
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
    elif callback_data == "free":
        keyboard = [
            [InlineKeyboardButton(text="–†–∞—Å–∫–ª–∞–¥ –Ω–∞ –ª—é–±–æ–≤—åüíò", web_app=WebAppInfo(url=f"https://ai-girls.ru/threecards?chat_id={chat_id}"))],
            [InlineKeyboardButton(text="–û–±—â–∏–π —Ä–∞—Å–∫–ª–∞–¥üîÆ", web_app=WebAppInfo(url=f"https://ai-girls.ru?chat_id={chat_id}"))],
            [InlineKeyboardButton(text="–†–∞—Å–∫–ª–∞–¥ –î–∞/–ù–µ—ÇüëÄ", web_app=WebAppInfo(url=f"https://ai-girls.ru/yesno?chat_id={chat_id}"))],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(
            text=(
                "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Ä–∞—Å–∫–ª–∞–¥–æ–≤!* üåü\n\n"
                "*–ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å?*\n"
                "*1. –ë—ã—Å—Ç—Ä—ã–π –∏ –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç* ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω—É–∂–Ω—ã –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å. ‚ö°\n"
                "*2. –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç* ‚Äî –ª–∞–∫–æ–Ω–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–µ–∑ –ª–∏—à–Ω–µ–π –≤–æ–¥—ã, –Ω–æ —Å –∫–ª—é—á–µ–≤—ã–º–∏ –≤—ã–≤–æ–¥–∞–º–∏. üìå\n"
                "*3. –î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å* ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π. üí´\n\n"
                "–í—ã–±–∏—Ä–∞–π —Ä–∞—Å–∫–ª–∞–¥ –∏ –∏—Å—Å–ª–µ–¥—É–π —Å–∏—Ç—É–∞—Ü–∏—é –ª–µ–≥–∫–æ –∏ —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º! üåà"
            ),
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
    elif callback_data == "sub":
        keyboard = [
            [InlineKeyboardButton(text="–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –¥–µ–Ω—å", callback_data="day_sub")],
            [InlineKeyboardButton(text="–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é", callback_data="week_sub")],
            [InlineKeyboardButton(text="–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –º–µ—Å—è—Ü", callback_data="month_sub")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text(
            text=(
                "*–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –ø–æ–¥–ø–∏—Å–æ–∫!* üåü\n\n"
                "–° –ø–æ–¥–ø–∏—Å–∫–æ–π —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å *–±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π* –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–æ–≤—ã–º —Ä–∞—Å–∫–ª–∞–¥–∞–º –¢–∞—Ä–æ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥:\n"
                "*1. –û–±—â–∏–π —Ä–∞—Å–∫–ª–∞–¥* ‚Äî –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å.\n"
                "*2. –†–∞—Å–∫–ª–∞–¥ –Ω–∞ –ª—é–±–æ–≤—å* ‚Äî —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ –≤–æ–ø—Ä–æ—Å –æ–± –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –∏ —á—É–≤—Å—Ç–≤–∞—Ö.\n"
                "*3. –†–∞—Å–∫–ª–∞–¥ \"–î–∞/–ù–µ—Ç\"* ‚Äî —á–µ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.\n\n"
                "–í—ã–±–∏—Ä–∞–π —Å–≤–æ–π —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–∑–≤–æ–ª—å –∫–∞—Ä—Ç–∞–º —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–≤–æ–µ –±—É–¥—É—â–µ–µ! ‚ú®"
            ),
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )
    elif callback_data == "day_sub":
        info_message = (
            "<b>–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –¥–µ–Ω—å\"</b> üåü\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: <b>49 —Ä—É–±–ª–µ–π</b>.\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:day_sub")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message + "\n<b>–£ –í–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞.</b> –ù–∞–∂–∏–º–∞–π /start –∏ –¥–µ–ª–∞–π –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã!",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "day_sub"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "week_sub":
        info_message = (
            "<b>–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é\"</b> üåü\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: <b>99 —Ä—É–±–ª–µ–π</b>.\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:week_sub")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message + "\n<b>–£ –í–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞.</b> –ù–∞–∂–∏–º–∞–π /start –∏ –¥–µ–ª–∞–π –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã!",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "week_sub"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "month_sub":
        info_message = (
            "<b>–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –º–µ—Å—è—Ü\"</b> üåü\n\n"
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: <b>299 —Ä—É–±–ª–µ–π</b>.\n"
        )
        has_access = redis_client.exists(f"user:{user_id}:month_sub")
        if has_access:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text(
                text=info_message + "\n<b>–£ –í–∞—Å —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∞.</b> –ù–∞–∂–∏–º–∞–π /start –∏ –¥–µ–ª–∞–π –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –±–∞–∑–æ–≤—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã!",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º email –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π
            await query.message.reply_text(
                text=info_message + "\n–î–ª—è –æ–ø–ª–∞—Ç—ã –º–Ω–µ –Ω—É–∂–µ–Ω –≤–∞—à email, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫. üìú\n<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π email:</b>",
                reply_markup=reply_markup,
                parse_mode="HTML"
            )
            context.user_data['chat_id'] = chat_id
            context.user_data['user_id'] = user_id
            context.user_data['awaiting_email'] = True  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
            context.user_data['payment_type'] = "month_sub"  # –£–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –∂–¥—ë–º –≤–≤–æ–¥–∞ email
    elif callback_data == "back_to_start":
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await query.message.delete()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ email
async def handle_email(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –±–æ—Ç email
    if not context.user_data.get('awaiting_email'):
        return  # –ï—Å–ª–∏ –Ω–µ –∂–¥—ë–º email, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    user_id = context.user_data['user_id']
    chat_id = context.user_data['chat_id']
    payment_type = context.user_data.get('payment_type')  # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
    
    if not (user_id and chat_id and payment_type):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã
        context.user_data['awaiting_email'] = False
        return
    
    email = update.message.text.strip()

    email_pattern = r'^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
    if not re.match(email_pattern, email):
        logger.warning(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –≤ payment_data: {email}, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–∞–≥–ª—É—à–∫–∞")
        email = "user@example.com"

    redis_client.setex(f"user:{user_id}:email", 86400, email)
    logger.info(f"Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {email}")

    # –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è email
    context.user_data['awaiting_email'] = False

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
    payment_uuid = str(uuid.uuid4())
    payment_data = {
        "user_id": str(user_id),
        "chat_id": str(chat_id),
        "email": email,
        "payment_type": payment_type  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞
    }

    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–ª–∞—Ç–µ–∂–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if payment_type == "premium7":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–ß—Ç–æ –º–µ–∂–¥—É –Ω–∞–º–∏?\""
        elif payment_type == "sovmestimost":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å\""
        elif payment_type == "sad_talantov":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–°–∞–¥ —Ç–∞–ª–∞–Ω—Ç–æ–≤\""
        elif payment_type == "volna_peremen":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–í–æ–ª–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω\""
        elif payment_type == "probuzhdenie_dushi":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –¥—É—à–∏\""
        elif payment_type == "lestnitsa_kariery":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–õ–µ—Å—Ç–Ω–∏—Ü–∞ –∫–∞—Ä—å–µ—Ä—ã\""
        elif payment_type == "finance":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª\""
        elif payment_type == "daily":
            amount = "49.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\""
        elif payment_type == "month":
            amount = "99.00"
            description = "–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ä–∞—Å–∫–ª–∞–¥ \"–ú–µ—Å—è—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑\""
        elif payment_type == "day_sub":
            amount = "49.00"
            description = "–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –¥–µ–Ω—å\""
        elif payment_type == "week_sub":
            amount = "99.00"
            description = "–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –Ω–µ–¥–µ–ª—é\""
        elif payment_type == "month_sub":
            amount = "299.00"
            description = "–ü–æ–¥–ø–∏—Å–∫–∞ \"–ë–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –º–µ—Å—è—Ü\""
        else:
            raise ValueError("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–ª–∞—Ç–µ–∂–∞")

        # –°–æ–∑–¥–∞—ë–º –ø–ª–∞—Ç—ë–∂ –≤ –ÆKassa
        payment = Payment.create({
            "amount": {
                "value": amount,
                "currency": "RUB"
            },
            "confirmation": {
                "type": "redirect",
                "return_url": "https://t.me/TaroBestFreebot"
            },
            "capture": True,
            "description": description,
            "metadata": {"payment_uuid": payment_uuid},
            "receipt": {
                "customer": {
                    "email": email
                },
                "items": [
                    {
                        "description": description,
                        "quantity": 1,
                        "amount": {
                            "value": amount,
                            "currency": "RUB"
                        },
                        "vat_code": 1
                    }
                ]
            }
        })

        payment_data["yookassa_payment_id"] = payment.id
        redis_client.setex(f"pending_payment:{payment_uuid}", 3600, json.dumps(payment_data))
        payment_url = payment.confirmation.confirmation_url
        logger.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É: {payment_url}")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
        if (payment_type in ["day_sub", "week_sub", "month_sub"]):
            keyboard = [
                [InlineKeyboardButton(text=f"–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—ÉüîÆ - {amount}‚ÇΩ", url=payment_url)],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(
                text="–°–ø–∞—Å–∏–±–æ! –ß–µ–∫ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ—á—Ç—É. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É:\n\n\n–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π —Å –æ–ø–ª–∞—Ç–æ–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @tarot_manager",
                reply_markup=reply_markup
            )
        else:
            keyboard = [
                [InlineKeyboardButton(text=f"–ö—É–ø–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥üîÆ - {amount}‚ÇΩ", url=payment_url)],
                [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(
                text="–°–ø–∞—Å–∏–±–æ! –ß–µ–∫ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ—á—Ç—É. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—Ç–∏—Ç—å —Ä–∞—Å–∫–ª–∞–¥:\n\n\n–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π —Å –æ–ø–ª–∞—Ç–æ–π –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @tarot_manager",
                reply_markup=reply_markup
            )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–ª–∞—Ç–µ–∂–∞ –≤ –ÆKassa: {str(e)}")
        keyboard = [
            [InlineKeyboardButton(text="–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞üîÑ", callback_data=f"{payment_type}_info")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥‚¨ÖÔ∏è", callback_data="back_to_start")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(
            text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–ø–ª–∞—Ç—É. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞! üòî",
            reply_markup=reply_markup,
            parse_mode="Markdown"
        )

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
async def set_bot_commands(application: Application):
    commands = [
        BotCommand(command="start", description="–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å–∫–ª–∞–¥"),
        BotCommand(command="referral", description="–ü–æ–ª—É—á–∏—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É")
    ]
    await application.bot.set_my_commands(commands)
    logger.info("–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: /start, /referral")

def main():
    application = Application.builder().token(TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("referral", referral))  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è /referral
    application.add_handler(CallbackQueryHandler(button_callback))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_email))
    application.post_init = set_bot_commands

    logger.info("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞...")
    loop = asyncio.get_event_loop()
    loop.run_until_complete(application.bot.set_webhook(url="https://ai-girls.ru/webhook"))
    logger.info("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –≤–µ–±—Ö—É–∫–æ–º...")
    application.run_webhook(
        listen="0.0.0.0",
        port=8443,
        url_path="/webhook",
        webhook_url="https://ai-girls.ru/webhook"
    )

if __name__ == '__main__':
    main()